<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.book.cord.mypage.MyPageMapper">
    
<!-- 회원정보 수정 -->

	<select id="getMemberInfo" parameterType="string" resultType="com.book.cord.login.MemberVO">
        SELECT * FROM MEMBER WHERE ID=#{id, jdbcType=VARCHAR}
    </select>
    
    <select id="nameCheck" parameterType="String" resultType="int">
    	SELECT COUNT(*) FROM MEMBER WHERE name=#{name}
    </select>
    
	<update id="memberUpdate">
		UPDATE MEMBER SET PWD=#{pwd}, NAME=#{name} WHERE ID=#{id} 
	</update>
	
	<delete id="deleteAccount">
		DELETE FROM MEMBER WHERE ID = #{id}
	</delete>

<!-- 리뷰 -->
	<insert id="insertReview">
		INSERT INTO REVIEW (REVIEW_NUM, MEMBER_ID, STARS, TITLE, AUTHOR, ISBN13, COVER, CONTENT)
		VALUES (review_num_seq.nextval, #{member_id}, #{stars}, #{title}, #{author}, #{isbn13}, #{cover}, #{content})
	</insert>
    
    <select id="reviewTotalCount" resultType="int">
		SELECT COUNT(*) FROM REVIEW WHERE MEMBER_ID=#{member_id}
	</select>

	<select id="getReviewListPaging" parameterType="map" resultType="com.book.cord.mypage.ReviewVO">
    <![CDATA[
        SELECT 
            REVIEW_NUM, MEMBER_ID, STARS, TITLE, AUTHOR, ISBN13, COVER, CONTENT, REG_DATE
        FROM (
            SELECT 
                ROW_NUMBER() OVER (ORDER BY REVIEW_NUM DESC) AS rnum, REVIEW_NUM, MEMBER_ID, STARS, TITLE, AUTHOR, ISBN13, COVER, CONTENT, REG_DATE
            FROM 
                REVIEW
            WHERE 
                member_id = #{member_id}
        ) tmp
        WHERE 
            rnum BETWEEN #{startRow} AND #{endRow}
        ORDER BY 
            rnum ASC
    ]]>
	</select>
	
	<delete id="deleteReview" parameterType="int">
		DELETE FROM REVIEW WHERE REVIEW_NUM=#{review_num}
	</delete>
	
	<update id="updateReview" parameterType="com.book.cord.mypage.ReviewVO">
		UPDATE REVIEW SET STARS=#{stars}, CONTENT=#{content} WHERE REVIEW_NUM=#{review_num}
	</update>


<!-- 북마크 -->
    <insert id="insertBookMark">
        INSERT INTO bookmark (bookmark_num, member_id, title, author, isbn13, cover)
        VALUES (bookmark_num_seq.nextval, #{member_id}, #{title}, #{author}, #{isbn13}, #{cover})
    </insert>
    
    <select id="bookMarkTotalCount" resultType="int">
		SELECT COUNT(*) FROM BOOKMARK WHERE MEMBER_ID=#{member_id}
	</select>
	
	<select id="getBookMarkListPaging" parameterType="map" resultType="com.book.cord.mypage.BookMarkVO">
    <![CDATA[
        SELECT 
            BOOKMARK_NUM, MEMBER_ID, TITLE, AUTHOR, ISBN13, COVER
        FROM (
            SELECT 
                ROW_NUMBER() OVER (ORDER BY BOOKMARK_NUM DESC) AS rnum, BOOKMARK_NUM, MEMBER_ID, TITLE, AUTHOR, ISBN13, COVER
            FROM 
                BOOKMARK
            WHERE 
                member_id = #{member_id}
        ) tmp
        WHERE 
            rnum BETWEEN #{startRow} AND #{endRow}
        ORDER BY 
            rnum ASC
    ]]>
	</select>

	<select id="isBookMarked" resultType="int">
		SELECT COUNT(*) FROM BOOKMARK WHERE MEMBER_ID=#{member_id} AND ISBN13=#{isbn13}
	</select>
	
<!-- 관리자 -->

	<resultMap type="com.book.cord.login.MemberVO" id="memberMap">
        <id property="id" column="id"/>
        <result property="pwd" column="pwd"/>
        <result property="name" column="name"/>
        <result property="member_num" column="member_num"/>
        <result property="provider" column="provider"/>
        <result property="enabled" column="enabled"/>
        <result property="reg_date" column="reg_date"/>
        <result property="update_date" column="update_date"/>
        <collection property="roleList" ofType="com.book.cord.login.AuthVO" resultMap="authMap"/>
    </resultMap>
    
    <resultMap type="com.book.cord.login.AuthVO" id="authMap">
        <result property="id" column="member_id"/>
        <result property="auth" column="role"/>
    </resultMap>
    
    <select id="getAllMemberInfo" resultMap="memberMap">
		SELECT MEMBER_NUM, M.ID, NAME, REG_DATE, PROVIDER, UPDATE_DATE, ENABLED, ROLE  
		FROM MEMBER M JOIN MEMBER_ROLE R
		ON M.ID = R.MEMBER_ID
	</select>
	
	<update id="enabledEditFalse">
		UPDATE MEMBER SET ENABLED = 0 WHERE ID = #{id}
	</update>
	
	<update id="enabledEditTrue">
		UPDATE MEMBER SET ENABLED = 1 WHERE ID = #{id}
	</update>
	
    <delete id="roleDelAdmin">
    	DELETE FROM MEMBER_ROLE WHERE MEMBER_ID = #{id} AND ROLE = 'ROLE_ADMIN'
    </delete>
    
    <insert id="roleAddAdmin">
    	INSERT INTO MEMBER_ROLE (MEMBER_ID, ROLE) VALUES (#{id}, 'ROLE_ADMIN')
    </insert>
    
    <delete id="memberDelete">
    	DELETE FROM MEMBER WHERE ID = #{id} 
    </delete>
    
</mapper>
